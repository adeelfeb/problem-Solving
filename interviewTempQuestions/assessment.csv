"hd","problems-wrapper","problem","problem 2","problem 3","problem 4","problem 5","problem 6","response-label","response-label 2","response-label 3","response-label 4","problem 7","problem 8","problem 9","problem 10","problem 11","problem 12","response-fieldset-legend"
"Process Scheduling","let shortId = ""592d28b009b24cfb90367b5e64a8b153"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","A CPU scheduler executes processes in time quantum of 100ms and then calculates the next process to execute after each quantum.
3 processes are fed into our CPU's process scheduler with the following attributes","Process A
Arrival Time: 0 msec
Execution Time Needed: 1900 msec","Process B
Arrival Time: 800 msec
Execution Time Needed: 1100 msec","Process C
Arrival Time: 900 msec
Execution Time Needed: 900 msec","There are four main algorithms which our CPU uses to schedule processes:
FCFR: First Come First Serve
SJF:  Shortest Job First
SRTF: Shortest Remaining Time First
RR:   Round Robin","If the scheduler is using the FCFR algorithm to schedule processes, which processes would have been completed after 2500 ms?","A","B, A","B, C","B, C","input {
        width: auto !important;
      }","","","","","",""
"Hash Clash","let shortId = ""3c4b6d99d8984e71880f2a1107c39411"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Which slot would the number 23 hash to, in the following Hash Table?","An array is used here to represent a Hash Table. Array index starts from  and ends at","0","size_of_array - 1","--","23","6","4","2","3","41","--","--","--","40","42",""
"FIFO Page Fault","let shortId = ""3bbea4ec44294962a058869851085c58"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Currently employed page replacement policy is  and the capacity of storing  page frames at any instance of time. The page reference string is . Can you tell the count of the page faults?","FIFO","6","Z","A","A","10","9","11","12","Y","X","X","C","W","W",""
"Algorithm","let shortId = ""710f521a59c644a086f829b7c3fb6862"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","What is the output of the following code?","func min_jumps(arr[], start, end)
{
    if(start == end)
        return 0;

    int min = INT_MAX;  // Max value of int

    for(idx = 1; arr[start] >= idx AND end >= start + idx; idx++)
    {
        int jumps = min_jumps(arr, start + idx, end) + 1;
        if(min > jumps)
            min = jumps;
    }
    return min;
}

main()
{
    arr[] = [1, 1, 1, 3, 4, 1, 1, 1, 4, 1],
    ans = min_jumps(arr, 0, lenOfArr);
    print ans;
}","input {
        width: auto !important;
      }","","","","5","8","11","6","","","","","","",""
"Average Waiting Time","let shortId = ""ef83f8d63cbe4ab99c093f0ccd836218"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Given the following processes with their arrival and burst time given below, calculate the average waiting time using the  approach.","First Come First Serve",": Time when the process is ready for its execution on the CPU. 
    : Time required by the process to complete its execution on the CPU. 
    : Time spent by the process waiting for the CPU after its arrival.","Arrival time","Burst time","Waiting time","10.25","9.25","11.28","11.25","Process","Arrival Time","Burst Time","P1","5.0","11.0",""
"Stacks and Queues","let shortId = ""58cf4c71b9714f9598e8482500bf04b6"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","There are two storage systems present, one is a stack and the other queue. The content of the stack is  and the content of the queue is  (the first item in both represent the first item stored). The number on each item represent the ID of item.","[7, 14, 5, 11]","[19, 17, 18, 27, 26, 28, 15, 24, 22, 25]","We have to balance these storage systems (move items between storages so that there are equal number of items in both). Keeping in mind the functionalities of stacks and queues, we have to balance them!","STACK STORAGE:","oldest","19","18","5","27","[7, 14, 5, 11]","newest","QUEUE STORAGE:","oldest","[19, 17, 18, 27, 26, 28, 15, 24, 22, 25]","newest","What is the oldest item in queue storage after balancing the storages?"
"Inheritance","let shortId = ""e07bd7dfa5b44fd786d445c24b11e60c"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","What should be the result of running the following pseudocode snippet?","class Class1:
    function function_1(self):
         print(""a"")

    function function_2(self):
         print(""b"")


class Class2:
    function function_1(self):
         print(""c"")

    function function_3(self):
         print(""d"")


class Class3:
    function function_2(self):
         print(""e"")

    function function_3(self):
         print(""f"")


class ClassA(Class3, Class1):
    function function_3(self):
         print(""h"")


class ClassB(Class2):
    function function_2(self):
         print(""i"")

    function function_3(self):
         print(""j"")


class ClassC(Class1):
    function function_2(self):
         print(""k"")

    function function_3(self):
         print(""l"")
      
      
ClassA().function_3()
ClassC().function_3()
ClassA().function_1()","input {
        width: auto !important;
      }","","","","alh","hf1","lki","hla","","","","","","",""
"System Safe State","let shortId = ""26c172250d5c4ecdba4e5ef091ba46c2"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","table.systemSafe {
      font-family: arial, sans-serif;
      border-collapse: collapse;
      width: 50%;
    }

    table.systemSafe td, table.systemSafe th {
      border: 1px solid #dddddd;
      text-align: left;
      margin-left: 30px;
    }

    table.systemSafe tr:nth-child(even) {
      background-color: #dddddd;
    }","A system has 26 magnetic tape drives and 5 processes : P1, P2, P3, P4, P5. The allocation of resources and the need for resources by the processes are described in the table. Which of the following is possible  of the system?","safe state",": A system is in a  if there is a sequence in which all the processes can be executed without getting into a .","Hint","safe state","[4, 5, 3, 1, 2]","[3, 4, 5, 1, 2]","[5, 2, 3, 1, 4]","[4, 3, 1, 2, 5]","deadlock","input {
        width: auto !important;
      }","","","","",""
"Identical Stacks","let shortId = ""46d8438e1afc4bb481312bec49ea87e4"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","The rightmost element shows the top of the stack. Adding up the heights of the bottles on a stack will give you the overall height of the stack. You can pop the bottles from each stack any number of times to change the height of the stack.","Each row below are the stacks of water bottles with their respective heights(n)","1. | 2 | 2 | 1 | 1 | 4 | 4 |","2. | 5 | 1 | 3 | 1 | 4 | 3 | 4 | 4 |","3. | 2 | 4 | 1 | 5 |","Determine the maximum height of each stack where all of the three stacks are equal in terms of height.","6","18","3","10","input {
        width: auto !important;
      }","","","","","",""
"Employee Salaries","let shortId = ""62399f53c1fa42b8bea945bbd0952278"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }",".qTable {
      font-family: arial, sans-serif;
      border-collapse: collapse;
      width: 50%;
    }

    .qTable td, th {
      border: 1px solid #dddddd;
      text-align: left;
      margin-left: 30px;
    }

    .qTable tr:nth-child(even) {
      background-color: #dddddd;
    }","Table: employee_age","Table: employee_salary","With given tables what would be output of following SQL query:","SELECT 
    MIN(eSal.salary)
FROM 
    employee_age as eAge INNER JOIN employee_salary as eSal
ON 
    eAge.emp_id = eSal.emp_id

    WHERE eAge.age > 
GROUP BY eAge.emp_id
    HAVING MIN(eSal.salary) >","20","54000","35000","49000","70000","35000","input {
        width: auto !important;
      }","","","","",""
"Propositional Logic","let shortId = ""d345112c37fa47cc8e07ddec296224f0"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","We found 3 children discussing something about cows, fish and cats but it was hard to tell if what they were speaking was True(T) or False(F).
    Can you apply some sort of Propositional Logic to deduce if what they are saying is True(T) or False(F)","Child-1: Cow cannot eat meat or Cat cannot Fly.","Child-2: Cat can Fly which implies Fish can do programming.","Child-3: Cow cannot eat meat or Cat cannot Fly, and, Cat can Fly which implies Fish can do programming.","input {
        width: auto !important;
      }","","Child-1: T, Child-2: F, Child-3: T","Child-1: F, Child-2: T, Child-3: F","Child-1: F, Child-2: F, Child-3: T","Child-1: F, Child-2: F, Child-3: F","","","","","","",""
"Valid Binary Search Tree","let shortId = ""a299a9ab09614529b50a8d14aca1392c"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Suppose that we have numbers between 1 and 100 in a binary search tree and we want to search for the number 2. Which of the following sequences could not be the sequence of nodes examined ?","input {
        width: auto !important;
      }","","","","","[43, 7, 2]","[96, 63, 61, 55, 39, 27, 10, 9, 1, 6, 5, 4, 3, 2]","[73, 16, 98, 2, 88, 68, 85, 99, 24, 2]","[9, 7, 2]","","","","","","",""
"Truth Harmony","let shortId = ""f12d2631c5e743e594a059e0731d0a42"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Braden speaks truth in  of cases and Fred in  of cases. In what percentage of cases are they likely to     	contradict each other, talking about the same incident.","30%","56%","input {
        width: auto !important;
      }","","","55.4","53.4","52.4","54.4","","","","","","",""
"Mode, Mean, Median","let shortId = ""c9db5837eb264e65b12d16ad8a03f263"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","M = [45, 55, 92, 55, 'N']","What is the value of N if the mode, mean and median of the list M are equal to each other? Express your answer to the nearest whole number.","Note:","The mode of a set of data values is the value that appears most often.","The mean is the average of the numbers: a calculated ""central"" value of a set of numbers.","Median is the middle number in a sorted list of numbers.","29","30","31","28","input {
        width: auto !important;
      }","","","","","",""
"Set Theory","let shortId = ""b34e07002f05478bb5677224e3698a54"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","input {
        width: auto !important;
      }","","","","","","{8, {9}}","{8, 9, {9}}","{}","{1, 2, 6, 7, 8, 9, 10, {9}}","","","","","","",""
"Round and Round","let shortId = ""7b8544d954f842699c8800facb7d038a"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","input {
        width: auto !important;
      }","","","","","","9","11","15","12","","","","","","",""
"Novel Arrangement","let shortId = ""f4c8eff405b6442cabf9ac5dd9e6c64e"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Anaya has three Urdu novels  and Four English novels 
    . She wants to arrange her novels in a way that following conditions must be met:","(G, E, D)","(B, C, F, A)","- No english novel can be placed immediate after another english novel.","- D must be placed earlier than F.","- C and F must be separated from each other by at least one novel.","B, D, A, E, C, G, F","E, D, C, A, F, G, B","A, E, B, D, C, G, F","F, G, C, D, A, E, B","- C must be placed immediately before or after G.","- G must be placed immediately after B, but not if E is placed earlier than B.","input {
        width: auto !important;
      }","","","","Choose the best sequence of novels:"
"Inheritance Code Snippet","let shortId = ""7e370f08bdde45cd988248422913aab0"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","What will be the output of this code snippet? (__init__ is constructor of class)","class A:
    def __init__(self):
        self.calc_i(143)
        
    def calc_i(self, i):
        self.i = 68 * i;

class B(A):
    def __init__(self):
        super().__init__()
        print(""i from B is"", self.i)
        
    def calc_i(self, i):
        self.i = 62 * i;

b = B()","input {
        width: auto !important;
      }","","","","10411","7825","11022","8866","","","","","","",""
"XOR And XNOR","let shortId = ""de9e77b20ec5425d81d66e16d7a6c52a"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","input {
        width: auto !important;
      }","","","","","","B is 10001011","B is 10000011","B is 00001101","","","","","","","",""
"Bubble Sort Integration","let shortId = ""269dc148fa454875be9660432bc2fb88"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","What will be the condition of following array after 3 iteration(s) of Bubble Sort while sorting in ascending order","[59, 18, 24, 58, 6, 11, 63, 30, 36]","input {
        width: auto !important;
      }","","","","[24, 36, 11, 6, 59, 58, 30, 18, 63]","[58, 11, 36, 30, 6, 18, 24, 59, 63]","[18, 6, 11, 24, 30, 36, 58, 59, 63]","[6, 18, 11, 58, 36, 59, 30, 24, 63]","","","","","","",""
"People In a Row","let shortId = ""bb7b7089a90c46988eb00675ba57ad02"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","In a cinema ticket line, A has 4 people ahead of it, while B has 19 people behind it.
    After they swap the positions, A has 19 people ahead. How many people are there in the line including A and B.","input {
        width: auto !important;
      }","","","","","40","42","39","41","","","","","","",""
"Bank Loan","let shortId = ""b65e8bf172604fd292344d621b07d1eb"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","input {
        width: auto !important;
      }","","","","","","43","45","49","41","","","","","","",""
"Custom Series","let shortId = ""6571c54cff324243a868866067ffd14f"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Assume we have a custom Series such that","First number is: 1","Second number is: 2","Every successing number is calculated as:  = 1 x  + 1 x  e.g.","F_n","F_{n-2}","34","89","21","55","F_{n-1}","Third number is:  = 1 x  + 1 x  = 1 x 1 + 1 x 2 = 3","F_3","F_1","F_2","input {
        width: auto !important;
      }","What is 9th number in the series"
"LinkedList","let shortId = ""68a1524d4be74f28b6268e887e6f0147"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","function foo(start) {
         if (start == NULL)
      	     return
      
      	 print(start.value)
      
      	 if (start.next != NULL)
      		 foo(start.next.next);
      	
      	 print(start.value);
     }","input {
        width: auto !important;
      }","","","","","84, 51, 76, 26, 42, 41","84, 42, 51, 51, 42, 84","84, 41, 26, 76, 42","84, 51, 42, 26, 41","","","","","","","What will be the output of the the following function if  pointing to  of following linked list?"
"Age Selection","let shortId = ""3ccac8251f754fa7a74d2dae86c2fa6a"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Table: A","id","name","age","28","Zara","5","3","4","6","30","52","Abdullah","27","48","Fatima",""
"Imaginary String Printer","let shortId = ""2d2d4a177e9747c496af535b54086223"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","function void imaginaryString()
            {
                arr_1 = ['V', 'M', 'G', 'A', 'O', 'J', 'P', 'H', 'N', 'E', 'Y', 'K']
                arr_2 = ['K', 'N', 'Q', 'E', 'M', 'X', 'F', 'P', 'V', 'O', 'T', 'B']
      
                arr_3 = get_common_values (arr_1, arr_2)
                arr_3 = sort_ascending (arr_3)
      
                a = [5, 4, 2, 0, 3, 1, 6]
                i = 0
      			
                while (i < length(arr_3))
                {
                	print arr_3[ a[i] ]
                	i = i + 1
                }
      			
            }","input {
        width: auto !important;
      }","","","","","5420316","VEOMNKP","POMENKV","Raise Index Error","","","","","","","What will the imaginaryString() function print?"
"Find me If you can","let shortId = ""66c13529a6c343a798e6e111295c6ea8"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","Find the missing operators:","15 ? 20 ? 6 ? 3 = 13","Operators allowed:  +  -  *","Answer format: a+b-c*d","input {
        width: auto !important;
      }","","15+20-6*3","15-20+6*3","20+15-6*3","15-20+6*3","","","","","","",""
"Balancing Parantheses","let shortId = ""a0b892f987214f719d5276dd34447d5b"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","A stack can be used to check whether the parentheses in an expression are balanced or not, by pushing an opening parenthesis to the stack and popping it whenever a closing parenthesis is encountered. What is the maximum possbile number of elements on the stack  when evaluating: ?","at any one time","( () )  ( ()  ()  ( ( ( () ) ) ) )","input {
        width: auto !important;
      }","","","7","4","6","5","","","","","","",""
"Travelkitties","let shortId = ""eb6af49d1c0147d3ba2176e1bea409b7"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }",".questionTable {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  display:inline;
  margin: 2.6% !important;
  display: block;
}

.questionTable td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

.questionTable tr:nth-child(even) {
  background-color: #dddddd;
}","Travelkitties is a travel aggregator which allow users to book recreational trips using their app from all arround the world. You've been given a task to
  find out top 1 travel desitination (city) to help business team in making data driven decisions.","Note: Travel desitination is arriving city of trip.","With given tables what would be output of following SQL query:","SELECT
  city_name
FROM (
  SELECT
        city AS city_name,
                    count(t.destination_id) AS trips
  FROM city AS c
  INNER JOIN trips AS t
  ON c.cid = t.destination_id
  GROUP BY city, t.destination_id
) AS ranked_trips
ORDER BY trips DESC
LIMIT 1;","input {
        width: auto !important;
      }","Seattle","Los Angeles","Dallas","New York","","","","","","",""
"Binary Search Steps Counter","let shortId = ""53dfdf45bf2c4d74a98af74c2617303a"";
        let options = document.querySelectorAll('input[name*=""' + shortId + '""]');
        for (let option of options){
            option.setAttribute(""disabled"", ""disabled"");
        }","input {
        width: auto !important;
      }","","","","","","1","7","2","4","","","","","","","How many iterations of binary search are required to find  in ?"